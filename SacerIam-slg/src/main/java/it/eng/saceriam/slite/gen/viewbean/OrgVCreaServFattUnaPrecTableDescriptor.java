/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_V_Crea_Serv_Fatt_Una_Prec
 *
 */
public class OrgVCreaServFattUnaPrecTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 21 October 2020 18:51" )
     */

    public static final String SELECT = "Select * from Org_V_Crea_Serv_Fatt_Una_Prec /**/";
    public static final String TABLE_NAME = "Org_V_Crea_Serv_Fatt_Una_Prec";
    public static final String COL_ID_FATTURA_ENTE = "id_fattura_ente";
    public static final String COL_ID_ACCORDO_ENTE = "id_accordo_ente";
    public static final String COL_ID_SERVIZIO_EROGATO = "id_servizio_erogato";
    public static final String COL_AA_SERVIZIO_FATTURA = "aa_servizio_fattura";
    public static final String COL_AA_SERVIZIO_FATTURA_PREC = "aa_servizio_fattura_prec";
    public static final String COL_NM_SERVIZIO_FATTURA = "nm_servizio_fattura";
    public static final String COL_IM_SERVIZIO_FATTURA = "im_servizio_fattura";
    public static final String COL_QT_SCAGLIONE_SERVIZIO_FATTURA = "qt_scaglione_servizio_fattura";
    public static final String COL_QT_UNIT_SERVIZIO_FATTURA = "qt_unit_servizio_fattura";
    public static final String COL_DT_EROG = "dt_erog";
    public static final String COL_NT_SERVIZIO_FATTURA = "nt_servizio_fattura";
    public static final String COL_ID_CD_IVA = "id_cd_iva";
    public static final String COL_IM_IVA = "im_iva";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_FATTURA_ENTE, new ColumnDescriptor(COL_ID_FATTURA_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_ACCORDO_ENTE, new ColumnDescriptor(COL_ID_ACCORDO_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_SERVIZIO_EROGATO, new ColumnDescriptor(COL_ID_SERVIZIO_EROGATO, Types.DECIMAL, 22, true));
        map.put(COL_AA_SERVIZIO_FATTURA, new ColumnDescriptor(COL_AA_SERVIZIO_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_AA_SERVIZIO_FATTURA_PREC,
                new ColumnDescriptor(COL_AA_SERVIZIO_FATTURA_PREC, Types.DECIMAL, 22, true));
        map.put(COL_NM_SERVIZIO_FATTURA, new ColumnDescriptor(COL_NM_SERVIZIO_FATTURA, Types.VARCHAR, 131, true));
        map.put(COL_IM_SERVIZIO_FATTURA, new ColumnDescriptor(COL_IM_SERVIZIO_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_QT_SCAGLIONE_SERVIZIO_FATTURA,
                new ColumnDescriptor(COL_QT_SCAGLIONE_SERVIZIO_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_QT_UNIT_SERVIZIO_FATTURA,
                new ColumnDescriptor(COL_QT_UNIT_SERVIZIO_FATTURA, Types.VARCHAR, 0, true));
        map.put(COL_DT_EROG, new ColumnDescriptor(COL_DT_EROG, Types.TIMESTAMP, 7, true));
        map.put(COL_NT_SERVIZIO_FATTURA, new ColumnDescriptor(COL_NT_SERVIZIO_FATTURA, Types.VARCHAR, 0, true));
        map.put(COL_ID_CD_IVA, new ColumnDescriptor(COL_ID_CD_IVA, Types.DECIMAL, 22, true));
        map.put(COL_IM_IVA, new ColumnDescriptor(COL_IM_IVA, Types.DECIMAL, 22, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
