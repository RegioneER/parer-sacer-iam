package it.eng.saceriam.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Usr_V_Lis_User
 *
 */
public class UsrVLisUserTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 19 March 2019 10:05" )
     */

    public static final String SELECT = "Select * from Usr_V_Lis_User /**/";
    public static final String TABLE_NAME = "Usr_V_Lis_User";
    public static final String COL_ID_USER_IAM = "id_user_iam";
    public static final String COL_NM_COGNOME_USER = "nm_cognome_user";
    public static final String COL_NM_NOME_USER = "nm_nome_user";
    public static final String COL_NM_USERID = "nm_userid";
    public static final String COL_CD_FISC = "cd_fisc";
    public static final String COL_TIPO_USER = "tipo_user";
    public static final String COL_ID_APPLIC = "id_applic";
    public static final String COL_ID_RUOLO_DEFAULT = "id_ruolo_default";
    public static final String COL_ID_ORGANIZ_IAM = "id_organiz_iam";
    public static final String COL_ID_RUOLO_DICH = "id_ruolo_dich";
    public static final String COL_NM_RUOLO_DEFAULT = "nm_ruolo_default";
    public static final String COL_NM_RUOLO_DICH = "nm_ruolo_dich";
    public static final String COL_FL_ERR_REPLIC = "fl_err_replic";
    public static final String COL_ID_USER_IAM_CORR = "id_user_iam_corr";
    public static final String COL_ID_SISTEMA_VERSANTE = "id_sistema_versante";
    public static final String COL_NM_SISTEMA_VERSANTE = "nm_sistema_versante";
    public static final String COL_ID_ENTE_SIAM_APPART = "id_ente_siam_appart";
    public static final String COL_NM_ENTE_SIAM_APPART = "nm_ente_siam_appart";
    public static final String COL_ID_ENTE_CONVENZ_ABIL = "id_ente_convenz_abil";
    public static final String COL_TI_STATO_USER = "ti_stato_user";
    public static final String COL_FL_RESP_ENTE_CONVENZ = "fl_resp_ente_convenz";
    public static final String COL_FL_ATTIVO = "fl_attivo";
    public static final String COL_ID_ORGANIZ_IAM_RICH = "id_organiz_iam_rich";
    public static final String COL_CD_REGISTRO_RICH_GEST_USER = "cd_registro_rich_gest_user";
    public static final String COL_AA_RICH_GEST_USER = "aa_rich_gest_user";
    public static final String COL_CD_KEY_RICH_GEST_USER = "cd_key_rich_gest_user";
    public static final String COL_ID_ENTE_RICH = "id_ente_rich";
    public static final String COL_CD_RICH_GEST_USER = "cd_rich_gest_user";
    public static final String COL_DT_RICH_GEST_USER = "dt_rich_gest_user";
    public static final String COL_ID_LAST_RICH_GEST_USER = "id_last_rich_gest_user";
    public static final String COL_DT_LAST_RICH_GEST_USER = "dt_last_rich_gest_user";
    public static final String COL_CD_LAST_RICH_GEST_USER = "cd_last_rich_gest_user";
    public static final String COL_FL_AZIONI_EVASE = "fl_azioni_evase";
    public static final String COL_DS_LISTA_AZIONI = "ds_lista_azioni";
    public static final String COL_DS_EMAIL = "ds_email";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_USER_IAM, new ColumnDescriptor(COL_ID_USER_IAM, Types.DECIMAL, 22, true));
        map.put(COL_NM_COGNOME_USER, new ColumnDescriptor(COL_NM_COGNOME_USER, Types.VARCHAR, 100, true));
        map.put(COL_NM_NOME_USER, new ColumnDescriptor(COL_NM_NOME_USER, Types.VARCHAR, 100, true));
        map.put(COL_NM_USERID, new ColumnDescriptor(COL_NM_USERID, Types.VARCHAR, 100, true));
        map.put(COL_CD_FISC, new ColumnDescriptor(COL_CD_FISC, Types.VARCHAR, 16, true));
        map.put(COL_TIPO_USER, new ColumnDescriptor(COL_TIPO_USER, Types.VARCHAR, 20, true));
        map.put(COL_ID_APPLIC, new ColumnDescriptor(COL_ID_APPLIC, Types.DECIMAL, 22, true));
        map.put(COL_ID_RUOLO_DEFAULT, new ColumnDescriptor(COL_ID_RUOLO_DEFAULT, Types.DECIMAL, 22, true));
        map.put(COL_ID_ORGANIZ_IAM, new ColumnDescriptor(COL_ID_ORGANIZ_IAM, Types.DECIMAL, 22, true));
        map.put(COL_ID_RUOLO_DICH, new ColumnDescriptor(COL_ID_RUOLO_DICH, Types.DECIMAL, 22, true));
        map.put(COL_NM_RUOLO_DEFAULT, new ColumnDescriptor(COL_NM_RUOLO_DEFAULT, Types.VARCHAR, 100, true));
        map.put(COL_NM_RUOLO_DICH, new ColumnDescriptor(COL_NM_RUOLO_DICH, Types.VARCHAR, 100, true));
        map.put(COL_FL_ERR_REPLIC, new ColumnDescriptor(COL_FL_ERR_REPLIC, Types.VARCHAR, 1, true));
        map.put(COL_ID_USER_IAM_CORR, new ColumnDescriptor(COL_ID_USER_IAM_CORR, Types.DECIMAL, 22, true));
        map.put(COL_ID_SISTEMA_VERSANTE, new ColumnDescriptor(COL_ID_SISTEMA_VERSANTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_SISTEMA_VERSANTE, new ColumnDescriptor(COL_NM_SISTEMA_VERSANTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE_SIAM_APPART, new ColumnDescriptor(COL_ID_ENTE_SIAM_APPART, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE_SIAM_APPART, new ColumnDescriptor(COL_NM_ENTE_SIAM_APPART, Types.VARCHAR, 357, true));
        map.put(COL_ID_ENTE_CONVENZ_ABIL, new ColumnDescriptor(COL_ID_ENTE_CONVENZ_ABIL, Types.DECIMAL, 22, true));
        map.put(COL_TI_STATO_USER, new ColumnDescriptor(COL_TI_STATO_USER, Types.VARCHAR, 30, true));
        map.put(COL_FL_RESP_ENTE_CONVENZ, new ColumnDescriptor(COL_FL_RESP_ENTE_CONVENZ, Types.VARCHAR, 1, true));
        map.put(COL_FL_ATTIVO, new ColumnDescriptor(COL_FL_ATTIVO, Types.VARCHAR, 1, true));
        map.put(COL_ID_ORGANIZ_IAM_RICH, new ColumnDescriptor(COL_ID_ORGANIZ_IAM_RICH, Types.DECIMAL, 22, true));
        map.put(COL_CD_REGISTRO_RICH_GEST_USER,
                new ColumnDescriptor(COL_CD_REGISTRO_RICH_GEST_USER, Types.VARCHAR, 100, true));
        map.put(COL_AA_RICH_GEST_USER, new ColumnDescriptor(COL_AA_RICH_GEST_USER, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_RICH_GEST_USER, new ColumnDescriptor(COL_CD_KEY_RICH_GEST_USER, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE_RICH, new ColumnDescriptor(COL_ID_ENTE_RICH, Types.DECIMAL, 22, true));
        map.put(COL_CD_RICH_GEST_USER, new ColumnDescriptor(COL_CD_RICH_GEST_USER, Types.VARCHAR, 100, true));
        map.put(COL_DT_RICH_GEST_USER, new ColumnDescriptor(COL_DT_RICH_GEST_USER, Types.TIMESTAMP, 7, true));
        map.put(COL_ID_LAST_RICH_GEST_USER, new ColumnDescriptor(COL_ID_LAST_RICH_GEST_USER, Types.DECIMAL, 22, true));
        map.put(COL_DT_LAST_RICH_GEST_USER, new ColumnDescriptor(COL_DT_LAST_RICH_GEST_USER, Types.TIMESTAMP, 7, true));
        map.put(COL_CD_LAST_RICH_GEST_USER,
                new ColumnDescriptor(COL_CD_LAST_RICH_GEST_USER, Types.VARCHAR, 4000, true));
        map.put(COL_FL_AZIONI_EVASE, new ColumnDescriptor(COL_FL_AZIONI_EVASE, Types.VARCHAR, 1, true));
        map.put(COL_DS_LISTA_AZIONI, new ColumnDescriptor(COL_DS_LISTA_AZIONI, Types.VARCHAR, 4000, true));
        map.put(COL_DS_EMAIL, new ColumnDescriptor(COL_DS_EMAIL, Types.VARCHAR, 254, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
