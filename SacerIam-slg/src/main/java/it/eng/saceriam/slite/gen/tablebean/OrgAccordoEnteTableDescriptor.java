/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.tablebean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_Accordo_Ente
 *
 */
public class OrgAccordoEnteTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 30 October 2020 09:45" )
     */

    public static final String SELECT = "Select * from Org_Accordo_Ente /**/";
    public static final String TABLE_NAME = "Org_Accordo_Ente";
    public static final String COL_ID_ACCORDO_ENTE = "id_accordo_ente";
    public static final String COL_ID_ENTE_CONVENZ = "id_ente_convenz";
    public static final String COL_DT_REG_ACCORDO = "dt_reg_accordo";
    public static final String COL_ID_TIPO_ACCORDO = "id_tipo_accordo";
    public static final String COL_ID_TARIFFARIO = "id_tariffario";
    public static final String COL_ID_CLASSE_ENTE_CONVENZ = "id_classe_ente_convenz";
    public static final String COL_NI_ABITANTI = "ni_abitanti";
    public static final String COL_DT_SCAD_ACCORDO = "dt_scad_accordo";
    public static final String COL_DS_FIRMATARIO_ENTE = "ds_firmatario_ente";
    public static final String COL_FL_PAGAMENTO = "fl_pagamento";
    public static final String COL_CD_REGISTRO_REPERTORIO = "cd_registro_repertorio";
    public static final String COL_AA_REPERTORIO = "aa_repertorio";
    public static final String COL_CD_KEY_REPERTORIO = "cd_key_repertorio";
    public static final String COL_DS_NOTE_ACCORDO = "ds_note_accordo";
    public static final String COL_CD_REGISTRO_DETERMINA = "cd_registro_determina";
    public static final String COL_AA_DETERMINA = "aa_determina";
    public static final String COL_CD_KEY_DETERMINA = "cd_key_determina";
    public static final String COL_DT_DETERMINA = "dt_determina";
    public static final String COL_CD_UFE = "cd_ufe";
    public static final String COL_DS_UFE = "ds_ufe";
    public static final String COL_CD_CIG = "cd_cig";
    public static final String COL_CD_CUP = "cd_cup";
    public static final String COL_CD_CAPITOLO = "cd_capitolo";
    public static final String COL_CD_COGE = "cd_coge";
    public static final String COL_ID_CD_IVA = "id_cd_iva";
    public static final String COL_CD_RIF_CONTAB = "cd_rif_contab";
    public static final String COL_CD_DDT = "cd_ddt";
    public static final String COL_CD_ODA = "cd_oda";
    public static final String COL_DT_DEC_ACCORDO = "dt_dec_accordo";
    public static final String COL_DT_DEC_ACCORDO_INFO = "dt_dec_accordo_info";
    public static final String COL_DT_RICH_MODULO_INFO = "dt_rich_modulo_info";
    public static final String COL_FL_RECESSO = "fl_recesso";
    public static final String COL_DS_ATTO_ACCORDO = "ds_atto_accordo";
    public static final String COL_DT_ATTO_ACCORDO = "dt_atto_accordo";
    public static final String COL_TI_SCOPO_ACCORDO = "ti_scopo_accordo";
    public static final String COL_ID_ENTE_CONVENZ_AMMINISTRATORE = "id_ente_convenz_amministratore";
    public static final String COL_ID_ENTE_CONVENZ_CONSERV = "id_ente_convenz_conserv";
    public static final String COL_ID_ENTE_CONVENZ_GESTORE = "id_ente_convenz_gestore";
    public static final String COL_DS_NOTA_RECESSO = "ds_nota_recesso";
    public static final String COL_DS_NOTA_FATTURAZIONE = "ds_nota_fatturazione";
    public static final String COL_CD_CLIENTE_FATTURAZIONE = "cd_cliente_fatturazione";
    public static final String COL_DT_FINE_VALID_ACCORDO = "dt_fine_valid_accordo";
    public static final String COL_FL_ACCORDO_CHIUSO = "fl_accordo_chiuso";
    public static final String COL_ID_CLUSTER_ACCORDO = "id_cluster_accordo";
    public static final String COL_ID_FASCIA_STORAGE_STANDARD_ACCORDO = "id_fascia_storage_standard_accordo";
    public static final String COL_ID_FASCIA_STORAGE_MANUALE_ACCORDO = "id_fascia_storage_manuale_accordo";
    public static final String COL_NI_TIPO_UD_STANDARD = "ni_tipo_ud_standard";
    public static final String COL_NI_TIPO_UD_MANUALE = "ni_tipo_ud_manuale";
    public static final String COL_IM_ATTIV_DOC_AMM = "im_attiv_doc_amm";
    public static final String COL_IM_ATTIV_DOC_SANI = "im_attiv_doc_sani";
    public static final String COL_NI_REFERTI_STANDARD = "ni_referti_standard";
    public static final String COL_NI_REFERTI_MANUALE = "ni_referti_manuale";
    public static final String COL_DS_NOTA_ATTIVAZIONE = "ds_nota_attivazione";
    public static final String COL_DS_NOTE_ENTE_ACCORDO = "ds_note_ente_accordo";
    public static final String COL_NI_STUDIO_DICOM = "ni_studio_dicom";
    public static final String COL_NI_STUDIO_DICOM_PREV = "ni_studio_dicom_prev";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_NM_STRUT = "nm_strut";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_ACCORDO_ENTE, new ColumnDescriptor(COL_ID_ACCORDO_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_ENTE_CONVENZ, new ColumnDescriptor(COL_ID_ENTE_CONVENZ, Types.DECIMAL, 22, false));
        map.put(COL_DT_REG_ACCORDO, new ColumnDescriptor(COL_DT_REG_ACCORDO, Types.TIMESTAMP, 7, false));
        map.put(COL_ID_TIPO_ACCORDO, new ColumnDescriptor(COL_ID_TIPO_ACCORDO, Types.DECIMAL, 22, false));
        map.put(COL_ID_TARIFFARIO, new ColumnDescriptor(COL_ID_TARIFFARIO, Types.DECIMAL, 22, false));
        map.put(COL_ID_CLASSE_ENTE_CONVENZ, new ColumnDescriptor(COL_ID_CLASSE_ENTE_CONVENZ, Types.DECIMAL, 22, false));
        map.put(COL_NI_ABITANTI, new ColumnDescriptor(COL_NI_ABITANTI, Types.DECIMAL, 22, false));
        map.put(COL_DT_SCAD_ACCORDO, new ColumnDescriptor(COL_DT_SCAD_ACCORDO, Types.TIMESTAMP, 7, false));
        map.put(COL_DS_FIRMATARIO_ENTE, new ColumnDescriptor(COL_DS_FIRMATARIO_ENTE, Types.VARCHAR, 254, false));
        map.put(COL_FL_PAGAMENTO, new ColumnDescriptor(COL_FL_PAGAMENTO, Types.VARCHAR, 1, false));
        map.put(COL_CD_REGISTRO_REPERTORIO,
                new ColumnDescriptor(COL_CD_REGISTRO_REPERTORIO, Types.VARCHAR, 100, false));
        map.put(COL_AA_REPERTORIO, new ColumnDescriptor(COL_AA_REPERTORIO, Types.DECIMAL, 22, false));
        map.put(COL_CD_KEY_REPERTORIO, new ColumnDescriptor(COL_CD_KEY_REPERTORIO, Types.VARCHAR, 100, false));
        map.put(COL_CD_REGISTRO_DETERMINA, new ColumnDescriptor(COL_CD_REGISTRO_DETERMINA, Types.VARCHAR, 100, false));
        map.put(COL_AA_DETERMINA, new ColumnDescriptor(COL_AA_DETERMINA, Types.DECIMAL, 22, false));
        map.put(COL_CD_KEY_DETERMINA, new ColumnDescriptor(COL_CD_KEY_DETERMINA, Types.VARCHAR, 100, false));
        map.put(COL_DT_DETERMINA, new ColumnDescriptor(COL_DT_DETERMINA, Types.TIMESTAMP, 7, false));
        map.put(COL_DS_NOTE_ACCORDO, new ColumnDescriptor(COL_DS_NOTE_ACCORDO, Types.VARCHAR, 4000, false));
        map.put(COL_CD_UFE, new ColumnDescriptor(COL_CD_UFE, Types.VARCHAR, 100, false));
        map.put(COL_DS_UFE, new ColumnDescriptor(COL_DS_UFE, Types.VARCHAR, 254, false));
        map.put(COL_CD_CIG, new ColumnDescriptor(COL_CD_CIG, Types.VARCHAR, 100, false));
        map.put(COL_CD_CUP, new ColumnDescriptor(COL_CD_CUP, Types.VARCHAR, 100, false));
        map.put(COL_CD_CAPITOLO, new ColumnDescriptor(COL_CD_CAPITOLO, Types.VARCHAR, 100, false));
        map.put(COL_CD_COGE, new ColumnDescriptor(COL_CD_COGE, Types.VARCHAR, 100, false));
        map.put(COL_ID_CD_IVA, new ColumnDescriptor(COL_ID_CD_IVA, Types.DECIMAL, 22, false));
        map.put(COL_CD_RIF_CONTAB, new ColumnDescriptor(COL_CD_RIF_CONTAB, Types.VARCHAR, 254, false));
        map.put(COL_CD_DDT, new ColumnDescriptor(COL_CD_DDT, Types.VARCHAR, 100, false));
        map.put(COL_CD_ODA, new ColumnDescriptor(COL_CD_ODA, Types.VARCHAR, 100, false));
        map.put(COL_DT_DEC_ACCORDO, new ColumnDescriptor(COL_DT_DEC_ACCORDO, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_DEC_ACCORDO_INFO, new ColumnDescriptor(COL_DT_DEC_ACCORDO_INFO, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_RICH_MODULO_INFO, new ColumnDescriptor(COL_DT_RICH_MODULO_INFO, Types.TIMESTAMP, 7, false));
        map.put(COL_FL_RECESSO, new ColumnDescriptor(COL_FL_RECESSO, Types.VARCHAR, 1, false));
        map.put(COL_DS_ATTO_ACCORDO, new ColumnDescriptor(COL_DS_ATTO_ACCORDO, Types.VARCHAR, 254, false));
        map.put(COL_DT_ATTO_ACCORDO, new ColumnDescriptor(COL_DT_ATTO_ACCORDO, Types.TIMESTAMP, 7, false));
        map.put(COL_TI_SCOPO_ACCORDO, new ColumnDescriptor(COL_TI_SCOPO_ACCORDO, Types.VARCHAR, 20, false));
        map.put(COL_ID_ENTE_CONVENZ_AMMINISTRATORE,
                new ColumnDescriptor(COL_ID_ENTE_CONVENZ_AMMINISTRATORE, Types.DECIMAL, 22, false));
        map.put(COL_ID_ENTE_CONVENZ_CONSERV,
                new ColumnDescriptor(COL_ID_ENTE_CONVENZ_CONSERV, Types.DECIMAL, 22, false));
        map.put(COL_ID_ENTE_CONVENZ_GESTORE,
                new ColumnDescriptor(COL_ID_ENTE_CONVENZ_GESTORE, Types.DECIMAL, 22, false));
        map.put(COL_DS_NOTA_RECESSO, new ColumnDescriptor(COL_DS_NOTA_RECESSO, Types.VARCHAR, 254, false));
        map.put(COL_DS_NOTA_FATTURAZIONE, new ColumnDescriptor(COL_DS_NOTA_FATTURAZIONE, Types.VARCHAR, 254, false));
        map.put(COL_CD_CLIENTE_FATTURAZIONE,
                new ColumnDescriptor(COL_CD_CLIENTE_FATTURAZIONE, Types.VARCHAR, 100, false));
        map.put(COL_DT_FINE_VALID_ACCORDO, new ColumnDescriptor(COL_DT_FINE_VALID_ACCORDO, Types.TIMESTAMP, 7, false));
        map.put(COL_FL_ACCORDO_CHIUSO, new ColumnDescriptor(COL_FL_ACCORDO_CHIUSO, Types.VARCHAR, 1, false));
        map.put(COL_ID_CLUSTER_ACCORDO, new ColumnDescriptor(COL_ID_CLUSTER_ACCORDO, Types.DECIMAL, 22, false));
        map.put(COL_ID_FASCIA_STORAGE_STANDARD_ACCORDO,
                new ColumnDescriptor(COL_ID_FASCIA_STORAGE_STANDARD_ACCORDO, Types.DECIMAL, 22, false));
        map.put(COL_ID_FASCIA_STORAGE_MANUALE_ACCORDO,
                new ColumnDescriptor(COL_ID_FASCIA_STORAGE_MANUALE_ACCORDO, Types.DECIMAL, 22, false));
        map.put(COL_NI_TIPO_UD_STANDARD, new ColumnDescriptor(COL_NI_TIPO_UD_STANDARD, Types.DECIMAL, 22, false));
        map.put(COL_NI_TIPO_UD_MANUALE, new ColumnDescriptor(COL_NI_TIPO_UD_MANUALE, Types.DECIMAL, 22, false));
        map.put(COL_IM_ATTIV_DOC_AMM, new ColumnDescriptor(COL_IM_ATTIV_DOC_AMM, Types.DECIMAL, 22, false));
        map.put(COL_IM_ATTIV_DOC_SANI, new ColumnDescriptor(COL_IM_ATTIV_DOC_SANI, Types.DECIMAL, 22, false));
        map.put(COL_NI_REFERTI_STANDARD, new ColumnDescriptor(COL_NI_REFERTI_STANDARD, Types.DECIMAL, 22, false));
        map.put(COL_NI_REFERTI_MANUALE, new ColumnDescriptor(COL_NI_REFERTI_MANUALE, Types.DECIMAL, 22, false));
        map.put(COL_DS_NOTA_ATTIVAZIONE, new ColumnDescriptor(COL_DS_NOTA_ATTIVAZIONE, Types.VARCHAR, 254, false));
        map.put(COL_DS_NOTE_ENTE_ACCORDO, new ColumnDescriptor(COL_DS_NOTE_ENTE_ACCORDO, Types.VARCHAR, 254, false));
        map.put(COL_NI_STUDIO_DICOM, new ColumnDescriptor(COL_NI_STUDIO_DICOM, Types.DECIMAL, 22, false));
        map.put(COL_NI_STUDIO_DICOM_PREV, new ColumnDescriptor(COL_NI_STUDIO_DICOM_PREV, Types.DECIMAL, 22, false));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, false));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
