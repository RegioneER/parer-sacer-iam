package it.eng.saceriam.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Usr_Rich_Gest_User
 *
 */
public class UsrRichGestUserTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 5 September 2017 16:42" )
     */

    public static final String SELECT = "Select * from Usr_Rich_Gest_User /**/";
    public static final String TABLE_NAME = "Usr_Rich_Gest_User";
    public static final String COL_ID_RICH_GEST_USER = "id_rich_gest_user";
    public static final String COL_CD_REGISTRO_RICH_GEST_USER = "cd_registro_rich_gest_user";
    public static final String COL_AA_RICH_GEST_USER = "aa_rich_gest_user";
    public static final String COL_CD_KEY_RICH_GEST_USER = "cd_key_rich_gest_user";
    public static final String COL_CD_RICH_GEST_USER = "cd_rich_gest_user";
    public static final String COL_ID_ENTE_RICH = "id_ente_rich";
    public static final String COL_TI_RICH_GEST_USER = "ti_rich_gest_user";
    public static final String COL_DT_RICH_GEST_USER = "dt_rich_gest_user";
    public static final String COL_NT_RICH_GEST_USER = "nt_rich_gest_user";
    public static final String COL_TI_USER_RICH = "ti_user_rich";
    public static final String COL_NM_USER_RICH = "nm_user_rich";
    public static final String COL_DS_EMAIL_RICH = "ds_email_rich";
    public static final String COL_ID_USER_IAM_RICH = "id_user_iam_rich";
    public static final String COL_TI_STATO_RICH_GEST_USER = "ti_stato_rich_gest_user";
    public static final String COL_BL_RICH_GEST_USER = "bl_rich_gest_user";
    public static final String COL_ID_NOTIFICA_RICH_EVASA = "id_notifica_rich_evasa";
    public static final String COL_NM_FILE_RICH_GEST_USER = "nm_file_rich_gest_user";
    public static final String COL_ID_ORGANIZ_IAM = "id_organiz_iam";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_RICH_GEST_USER, new ColumnDescriptor(COL_ID_RICH_GEST_USER, Types.DECIMAL, 22, true));
        map.put(COL_CD_REGISTRO_RICH_GEST_USER,
                new ColumnDescriptor(COL_CD_REGISTRO_RICH_GEST_USER, Types.VARCHAR, 100, false));
        map.put(COL_AA_RICH_GEST_USER, new ColumnDescriptor(COL_AA_RICH_GEST_USER, Types.DECIMAL, 22, false));
        map.put(COL_CD_KEY_RICH_GEST_USER, new ColumnDescriptor(COL_CD_KEY_RICH_GEST_USER, Types.VARCHAR, 100, false));
        map.put(COL_CD_RICH_GEST_USER, new ColumnDescriptor(COL_CD_RICH_GEST_USER, Types.VARCHAR, 100, false));
        map.put(COL_ID_ENTE_RICH, new ColumnDescriptor(COL_ID_ENTE_RICH, Types.DECIMAL, 22, false));
        map.put(COL_TI_RICH_GEST_USER, new ColumnDescriptor(COL_TI_RICH_GEST_USER, Types.VARCHAR, 30, false));
        map.put(COL_DT_RICH_GEST_USER, new ColumnDescriptor(COL_DT_RICH_GEST_USER, Types.TIMESTAMP, 7, false));
        map.put(COL_NT_RICH_GEST_USER, new ColumnDescriptor(COL_NT_RICH_GEST_USER, Types.VARCHAR, 4000, false));
        map.put(COL_TI_USER_RICH, new ColumnDescriptor(COL_TI_USER_RICH, Types.VARCHAR, 20, false));
        map.put(COL_NM_USER_RICH, new ColumnDescriptor(COL_NM_USER_RICH, Types.VARCHAR, 100, false));
        map.put(COL_DS_EMAIL_RICH, new ColumnDescriptor(COL_DS_EMAIL_RICH, Types.VARCHAR, 254, false));
        map.put(COL_ID_USER_IAM_RICH, new ColumnDescriptor(COL_ID_USER_IAM_RICH, Types.DECIMAL, 22, false));
        map.put(COL_TI_STATO_RICH_GEST_USER,
                new ColumnDescriptor(COL_TI_STATO_RICH_GEST_USER, Types.VARCHAR, 20, false));
        map.put(COL_BL_RICH_GEST_USER, new ColumnDescriptor(COL_BL_RICH_GEST_USER, Types.BLOB, 4000, false));
        map.put(COL_ID_NOTIFICA_RICH_EVASA, new ColumnDescriptor(COL_ID_NOTIFICA_RICH_EVASA, Types.DECIMAL, 22, false));
        map.put(COL_NM_FILE_RICH_GEST_USER,
                new ColumnDescriptor(COL_NM_FILE_RICH_GEST_USER, Types.VARCHAR, 100, false));
        map.put(COL_ID_ORGANIZ_IAM, new ColumnDescriptor(COL_ID_ORGANIZ_IAM, Types.DECIMAL, 22, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
