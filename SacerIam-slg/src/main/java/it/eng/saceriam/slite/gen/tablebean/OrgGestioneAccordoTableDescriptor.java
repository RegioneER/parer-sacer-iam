/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.tablebean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_Gestione_Accordo
 *
 */
public class OrgGestioneAccordoTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Wednesday, 2 October 2019 12:34" )
     */

    public static final String SELECT = "Select * from Org_Gestione_Accordo /**/";
    public static final String TABLE_NAME = "Org_Gestione_Accordo";
    public static final String COL_ID_GEST_ACCORDO = "id_gest_accordo";
    public static final String COL_ID_ACCORDO_ENTE = "id_accordo_ente";
    public static final String COL_CD_REGISTRO_GEST_ACCORDO = "cd_registro_gest_accordo";
    public static final String COL_AA_GEST_ACCORDO = "aa_gest_accordo";
    public static final String COL_CD_KEY_GEST_ACCORDO = "cd_key_gest_accordo";
    public static final String COL_DT_GEST_ACCORDO = "dt_gest_accordo";
    public static final String COL_DS_GEST_ACCORDO = "ds_gest_accordo";
    public static final String COL_DS_NOTA_GEST_ACCORDO = "ds_nota_gest_accordo";
    public static final String COL_BL_GEST_ACCORDO = "bl_gest_accordo";
    public static final String COL_NM_FILE_GEST_ACCORDO = "nm_file_gest_accordo";
    public static final String COL_PG_GEST_ACCORDO = "pg_gest_accordo";
    public static final String COL_ID_GEST_ACCORDO_RISPOSTA = "id_gest_accordo_risposta";
    public static final String COL_ID_TIPO_GESTIONE_ACCORDO = "id_tipo_gestione_accordo";
    public static final String COL_TIPO_TRASMISSIONE = "tipo_trasmissione";
    public static final String COL_ENTE_GEST_ACCORDO = "ente_discip_strut";
    public static final String COL_STRUTTURA_GEST_ACCORDO = "struttura_discip_strut";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_GEST_ACCORDO,
		new ColumnDescriptor(COL_ID_GEST_ACCORDO, Types.DECIMAL, 22, true));
	map.put(COL_ID_ACCORDO_ENTE,
		new ColumnDescriptor(COL_ID_ACCORDO_ENTE, Types.DECIMAL, 22, false));
	map.put(COL_CD_REGISTRO_GEST_ACCORDO,
		new ColumnDescriptor(COL_CD_REGISTRO_GEST_ACCORDO, Types.VARCHAR, 100, false));
	map.put(COL_AA_GEST_ACCORDO,
		new ColumnDescriptor(COL_AA_GEST_ACCORDO, Types.DECIMAL, 22, false));
	map.put(COL_CD_KEY_GEST_ACCORDO,
		new ColumnDescriptor(COL_CD_KEY_GEST_ACCORDO, Types.VARCHAR, 100, false));
	map.put(COL_DT_GEST_ACCORDO,
		new ColumnDescriptor(COL_DT_GEST_ACCORDO, Types.TIMESTAMP, 7, false));
	map.put(COL_DS_GEST_ACCORDO,
		new ColumnDescriptor(COL_DS_GEST_ACCORDO, Types.VARCHAR, 4000, false));
	map.put(COL_DS_NOTA_GEST_ACCORDO,
		new ColumnDescriptor(COL_DS_NOTA_GEST_ACCORDO, Types.VARCHAR, 4000, false));
	map.put(COL_BL_GEST_ACCORDO,
		new ColumnDescriptor(COL_BL_GEST_ACCORDO, Types.BLOB, 4000, false));
	map.put(COL_NM_FILE_GEST_ACCORDO,
		new ColumnDescriptor(COL_NM_FILE_GEST_ACCORDO, Types.VARCHAR, 100, false));
	map.put(COL_PG_GEST_ACCORDO,
		new ColumnDescriptor(COL_PG_GEST_ACCORDO, Types.DECIMAL, 22, false));
	map.put(COL_ID_GEST_ACCORDO_RISPOSTA,
		new ColumnDescriptor(COL_ID_GEST_ACCORDO_RISPOSTA, Types.DECIMAL, 22, false));
	map.put(COL_ID_TIPO_GESTIONE_ACCORDO,
		new ColumnDescriptor(COL_ID_TIPO_GESTIONE_ACCORDO, Types.DECIMAL, 22, false));
	map.put(COL_TIPO_TRASMISSIONE,
		new ColumnDescriptor(COL_TIPO_TRASMISSIONE, Types.VARCHAR, 100, false));
	map.put(COL_ENTE_GEST_ACCORDO,
		new ColumnDescriptor(COL_ENTE_GEST_ACCORDO, Types.VARCHAR, 100, false));
	map.put(COL_STRUTTURA_GEST_ACCORDO,
		new ColumnDescriptor(COL_STRUTTURA_GEST_ACCORDO, Types.VARCHAR, 100, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
