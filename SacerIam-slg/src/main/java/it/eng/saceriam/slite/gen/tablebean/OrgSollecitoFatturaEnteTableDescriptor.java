package it.eng.saceriam.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_Sollecito_Fattura_Ente
 *
 */
public class OrgSollecitoFatturaEnteTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 29 May 2018 12:36" )
     */

    public static final String SELECT = "Select * from Org_Sollecito_Fattura_Ente /**/";
    public static final String TABLE_NAME = "Org_Sollecito_Fattura_Ente";
    public static final String COL_ID_SOLLECITO_FATTURA_ENTE = "id_sollecito_fattura_ente";
    public static final String COL_ID_FATTURA_ENTE = "id_fattura_ente";
    public static final String COL_CD_REGISTRO_SOLLECITO = "cd_registro_sollecito";
    public static final String COL_AA_VAR_SOLLECITO = "aa_var_sollecito";
    public static final String COL_CD_KEY_VAR_SOLLECITO = "cd_key_var_sollecito";
    public static final String COL_DT_SOLLECITO = "dt_sollecito";
    public static final String COL_DL_SOLLECITO = "dl_sollecito";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_SOLLECITO_FATTURA_ENTE,
                new ColumnDescriptor(COL_ID_SOLLECITO_FATTURA_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_FATTURA_ENTE, new ColumnDescriptor(COL_ID_FATTURA_ENTE, Types.DECIMAL, 22, false));
        map.put(COL_CD_REGISTRO_SOLLECITO, new ColumnDescriptor(COL_CD_REGISTRO_SOLLECITO, Types.VARCHAR, 100, false));
        map.put(COL_AA_VAR_SOLLECITO, new ColumnDescriptor(COL_AA_VAR_SOLLECITO, Types.DECIMAL, 22, false));
        map.put(COL_CD_KEY_VAR_SOLLECITO, new ColumnDescriptor(COL_CD_KEY_VAR_SOLLECITO, Types.VARCHAR, 100, false));
        map.put(COL_DT_SOLLECITO, new ColumnDescriptor(COL_DT_SOLLECITO, Types.TIMESTAMP, 7, false));
        map.put(COL_DL_SOLLECITO, new ColumnDescriptor(COL_DL_SOLLECITO, Types.VARCHAR, 4000, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
