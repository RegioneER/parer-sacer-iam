package it.eng.saceriam.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_V_Ric_Ente_Non_Convenz
 *
 */
public class OrgVRicEnteNonConvenzTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 4 April 2019 10:19" )
     */

    public static final String SELECT = "Select * from Org_V_Ric_Ente_Non_Convenz /**/";
    public static final String TABLE_NAME = "Org_V_Ric_Ente_Non_Convenz";
    public static final String COL_ID_ENTE_SIAM = "id_ente_siam";
    public static final String COL_NM_ENTE_SIAM = "nm_ente_siam";
    public static final String COL_DT_INI_VAL = "dt_ini_val";
    public static final String COL_DT_CESSAZIONE = "dt_cessazione";
    public static final String COL_ARCHIVISTA = "archivista";
    public static final String COL_ID_USER_IAM_COR = "id_user_iam_cor";
    public static final String COL_TI_ENTE_NON_CONVENZ = "ti_ente_non_convenz";
    public static final String COL_ID_USER_IAM_ARK = "id_user_iam_ark";
    public static final String COL_NM_USERID_ARK = "nm_userid_ark";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_ENTE_SIAM, new ColumnDescriptor(COL_ID_ENTE_SIAM, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE_SIAM, new ColumnDescriptor(COL_NM_ENTE_SIAM, Types.VARCHAR, 254, true));
        map.put(COL_DT_INI_VAL, new ColumnDescriptor(COL_DT_INI_VAL, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_CESSAZIONE, new ColumnDescriptor(COL_DT_CESSAZIONE, Types.TIMESTAMP, 7, true));
        map.put(COL_ARCHIVISTA, new ColumnDescriptor(COL_ARCHIVISTA, Types.VARCHAR, 100, true));
        map.put(COL_ID_USER_IAM_COR, new ColumnDescriptor(COL_ID_USER_IAM_COR, Types.DECIMAL, 22, true));
        map.put(COL_TI_ENTE_NON_CONVENZ, new ColumnDescriptor(COL_TI_ENTE_NON_CONVENZ, Types.VARCHAR, 20, true));
        map.put(COL_ID_USER_IAM_ARK, new ColumnDescriptor(COL_ID_USER_IAM_ARK, Types.DECIMAL, 22, true));
        map.put(COL_NM_USERID_ARK, new ColumnDescriptor(COL_NM_USERID_ARK, Types.VARCHAR, 100, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
