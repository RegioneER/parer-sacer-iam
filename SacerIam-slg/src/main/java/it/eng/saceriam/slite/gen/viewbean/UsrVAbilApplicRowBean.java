/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.viewbean;

import java.math.BigDecimal;

import it.eng.saceriam.viewEntity.UsrVAbilApplic;
import it.eng.saceriam.viewEntity.UsrVAbilApplicId;
import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Usr_V_Abil_Applic
 *
 */
public class UsrVAbilApplicRowBean extends BaseRow
	implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Thursday, 9 June 2016 11:48" )
     */

    public static UsrVAbilApplicTableDescriptor TABLE_DESCRIPTOR = new UsrVAbilApplicTableDescriptor();

    public UsrVAbilApplicRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdUserIam() {
	return getBigDecimal("id_user_iam");
    }

    public void setIdUserIam(BigDecimal idUserIam) {
	setObject("id_user_iam", idUserIam);
    }

    public String getNmUserid() {
	return getString("nm_userid");
    }

    public void setNmUserid(String nmUserid) {
	setObject("nm_userid", nmUserid);
    }

    public BigDecimal getIdApplic() {
	return getBigDecimal("id_applic");
    }

    public void setIdApplic(BigDecimal idApplic) {
	setObject("id_applic", idApplic);
    }

    public String getNmApplic() {
	return getString("nm_applic");
    }

    public void setNmApplic(String nmApplic) {
	setObject("nm_applic", nmApplic);
    }

    @Override
    public void entityToRowBean(Object obj) {
	UsrVAbilApplic entity = (UsrVAbilApplic) obj;
	this.setIdUserIam(entity.getUsrVAbilApplicId() == null ? null
		: entity.getUsrVAbilApplicId().getIdUserIam());
	this.setNmUserid(entity.getNmUserid());
	this.setIdApplic(entity.getUsrVAbilApplicId() == null ? null
		: entity.getUsrVAbilApplicId().getIdApplic());
	this.setNmApplic(entity.getNmApplic());
    }

    @Override
    public UsrVAbilApplic rowBeanToEntity() {
	UsrVAbilApplic entity = new UsrVAbilApplic();
	entity.setUsrVAbilApplicId(new UsrVAbilApplicId());
	entity.getUsrVAbilApplicId().setIdUserIam(this.getIdUserIam());
	entity.setNmUserid(this.getNmUserid());
	entity.getUsrVAbilApplicId().setIdApplic(this.getIdApplic());
	entity.setNmApplic(this.getNmApplic());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
