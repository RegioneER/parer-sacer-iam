package it.eng.saceriam.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Apl_Sistema_Vers_Ark_Rif
 *
 */
public class AplSistemaVersArkRifTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 10 August 2016 16:39" )
     */

    public static final String SELECT = "Select * from Apl_Sistema_Vers_Ark_Rif /**/";
    public static final String TABLE_NAME = "Apl_Sistema_Vers_Ark_Rif";
    public static final String COL_ID_SISTEMA_VERS_ARK_RIF = "id_sistema_vers_ark_rif";
    public static final String COL_ID_SISTEMA_VERSANTE = "id_sistema_versante";
    public static final String COL_ID_USER_IAM = "id_user_iam";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_SISTEMA_VERS_ARK_RIF,
                new ColumnDescriptor(COL_ID_SISTEMA_VERS_ARK_RIF, Types.DECIMAL, 22, true));
        map.put(COL_ID_SISTEMA_VERSANTE, new ColumnDescriptor(COL_ID_SISTEMA_VERSANTE, Types.DECIMAL, 22, false));
        map.put(COL_ID_USER_IAM, new ColumnDescriptor(COL_ID_USER_IAM, Types.DECIMAL, 22, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
