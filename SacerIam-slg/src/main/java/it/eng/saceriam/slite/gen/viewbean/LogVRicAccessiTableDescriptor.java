package it.eng.saceriam.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Log_V_Ric_Accessi
 *
 */
public class LogVRicAccessiTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 9 June 2022 14:41" )
     */

    public static final String SELECT = "Select * from Log_V_Ric_Accessi /**/";
    public static final String TABLE_NAME = "Log_V_Ric_Accessi";
    public static final String COL_ID_EVENTO = "id_evento";
    public static final String COL_NM_USERID = "nm_userid";
    public static final String COL_CD_IND_IP_CLIENT = "cd_ind_ip_client";
    public static final String COL_CD_IND_SERVER = "cd_ind_server";
    public static final String COL_DT_EVENTO = "dt_evento";
    public static final String COL_TIPO_EVENTO = "tipo_evento";
    public static final String COL_DS_EVENTO = "ds_evento";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_EVENTO, new ColumnDescriptor(COL_ID_EVENTO, Types.DECIMAL, 22, true));
        map.put(COL_NM_USERID, new ColumnDescriptor(COL_NM_USERID, Types.VARCHAR, 100, true));
        map.put(COL_CD_IND_IP_CLIENT, new ColumnDescriptor(COL_CD_IND_IP_CLIENT, Types.VARCHAR, 100, true));
        map.put(COL_CD_IND_SERVER, new ColumnDescriptor(COL_CD_IND_SERVER, Types.VARCHAR, 100, true));
        map.put(COL_DT_EVENTO, new ColumnDescriptor(COL_DT_EVENTO, Types.TIMESTAMP, 7, true));
        map.put(COL_TIPO_EVENTO, new ColumnDescriptor(COL_TIPO_EVENTO, Types.VARCHAR, 20, true));
        map.put(COL_DS_EVENTO, new ColumnDescriptor(COL_DS_EVENTO, Types.VARCHAR, 1000, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
