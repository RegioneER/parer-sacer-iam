/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.saceriam.entity.AplApplic;
import it.eng.saceriam.entity.AplNews;
import it.eng.saceriam.entity.AplNewsApplic;
import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Apl_News_Applic
 *
 */
public class AplNewsApplicRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Wednesday, 19 March 2014 10:37" )
     */

    public static AplNewsApplicTableDescriptor TABLE_DESCRIPTOR = new AplNewsApplicTableDescriptor();

    public AplNewsApplicRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdNewsApplic() {
	return getBigDecimal("id_news_applic");
    }

    public void setIdNewsApplic(BigDecimal idNewsApplic) {
	setObject("id_news_applic", idNewsApplic);
    }

    public BigDecimal getIdNews() {
	return getBigDecimal("id_news");
    }

    public void setIdNews(BigDecimal idNews) {
	setObject("id_news", idNews);
    }

    public BigDecimal getIdApplic() {
	return getBigDecimal("id_applic");
    }

    public void setIdApplic(BigDecimal idApplic) {
	setObject("id_applic", idApplic);
    }

    @Override
    public void entityToRowBean(Object obj) {
	AplNewsApplic entity = (AplNewsApplic) obj;
	this.setIdNewsApplic(new BigDecimal(entity.getIdNewsApplic()));
	if (entity.getAplNew() != null) {
	    this.setIdNews(new BigDecimal(entity.getAplNew().getIdNews()));
	}

	if (entity.getAplApplic() != null) {
	    this.setIdApplic(new BigDecimal(entity.getAplApplic().getIdApplic()));
	}
    }

    @Override
    public AplNewsApplic rowBeanToEntity() {
	AplNewsApplic entity = new AplNewsApplic();
	if (this.getIdNewsApplic() != null) {
	    entity.setIdNewsApplic(this.getIdNewsApplic().longValue());
	}
	if (this.getIdNews() != null) {
	    if (entity.getAplNew() == null) {
		entity.setAplNew(new AplNews());
	    }
	    entity.getAplNew().setIdNews(this.getIdNews().longValue());
	}
	if (this.getIdApplic() != null) {
	    if (entity.getAplApplic() == null) {
		entity.setAplApplic(new AplApplic());
	    }
	    entity.getAplApplic().setIdApplic(this.getIdApplic().longValue());
	}
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
