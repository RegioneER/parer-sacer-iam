/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.saceriam.entity.OrgCategEnte;
import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Org_Categ_Ente
 *
 */
public class OrgCategEnteRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static OrgCategEnteTableDescriptor TABLE_DESCRIPTOR = new OrgCategEnteTableDescriptor();

    public OrgCategEnteRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdCategEnte() {
	return getBigDecimal("id_categ_ente");
    }

    public void setIdCategEnte(BigDecimal idCategEnte) {
	setObject("id_categ_ente", idCategEnte);
    }

    public String getCdCategEnte() {
	return getString("cd_categ_ente");
    }

    public void setCdCategEnte(String cdCategEnte) {
	setObject("cd_categ_ente", cdCategEnte);
    }

    public String getDsCategEnte() {
	return getString("ds_categ_ente");
    }

    public void setDsCategEnte(String dsCategEnte) {
	setObject("ds_categ_ente", dsCategEnte);
    }

    @Override
    public void entityToRowBean(Object obj) {
	OrgCategEnte entity = (OrgCategEnte) obj;
	this.setIdCategEnte(new BigDecimal(entity.getIdCategEnte()));
	this.setCdCategEnte(entity.getCdCategEnte());
	this.setDsCategEnte(entity.getDsCategEnte());
    }

    @Override
    public OrgCategEnte rowBeanToEntity() {
	OrgCategEnte entity = new OrgCategEnte();
	if (this.getIdCategEnte() != null) {
	    entity.setIdCategEnte(this.getIdCategEnte().longValue());
	}
	entity.setCdCategEnte(this.getCdCategEnte());
	entity.setDsCategEnte(this.getDsCategEnte());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
