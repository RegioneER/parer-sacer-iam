/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.tablebean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_Ente_Siam
 *
 */
public class OrgEnteSiamTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Friday, 19 January 2018 15:06" )
     */

    public static final String SELECT = "Select * from Org_Ente_Siam /**/";
    public static final String TABLE_NAME = "Org_Ente_Siam";
    public static final String COL_ID_ENTE_SIAM = "id_ente_siam";
    public static final String COL_NM_ENTE_SIAM = "nm_ente_siam";
    public static final String COL_DT_INI_VAL = "dt_ini_val";
    public static final String COL_CD_FISC = "cd_fisc";
    public static final String COL_CD_ENTE_CONVENZ = "cd_ente_convenz";
    public static final String COL_DS_VIA_SEDE_LEGALE = "ds_via_sede_legale";
    public static final String COL_DS_NOTE = "ds_note";
    public static final String COL_DS_CITTA_SEDE_LEGALE = "ds_citta_sede_legale";
    public static final String COL_ID_AMBITO_TERRIT = "id_ambito_territ";
    public static final String COL_ID_CATEG_ENTE = "id_categ_ente";
    public static final String COL_DT_CESSAZIONE = "dt_cessazione";
    public static final String COL_DT_INI_VAL_APPART_AMBIENTE = "dt_ini_val_appart_ambiente";
    public static final String COL_DT_FIN_VAL_APPART_AMBIENTE = "dt_fin_val_appart_ambiente";
    public static final String COL_ID_ENTE_CONVENZ_NUOVO = "id_ente_convenz_nuovo";
    public static final String COL_ID_ENTE_CONVENZ_CREAZIONE = "id_ente_convenz_creazione";
    public static final String COL_ID_ENTE_PRODUT_CORRISP = "id_ente_produt_corrisp";
    public static final String COL_ID_PROV_SEDE_LEGALE = "id_prov_sede_legale";
    public static final String COL_CD_NAZIONE_SEDE_LEGALE = "cd_nazione_sede_legale";
    public static final String COL_TI_CD_ENTE_CONVENZ = "ti_cd_ente_convenz";
    public static final String COL_TI_ENTE = "ti_ente";
    public static final String COL_TI_ENTE_CONVENZ = "ti_ente_convenz";
    public static final String COL_TI_ENTE_NON_CONVENZ = "ti_ente_non_convenz";
    public static final String COL_CD_CAP_SEDE_LEGALE = "cd_cap_sede_legale";
    public static final String COL_ID_AMBIENTE_ENTE_CONVENZ = "id_ambiente_ente_convenz";
    public static final String COL_DT_RICH_MODULO_INFO = "dt_rich_modulo_info";
    public static final String COL_CD_UFE = "cd_ufe";
    public static final String COL_DS_UFE = "ds_ufe";
    public static final String COL_ID_CD_IVA = "id_cd_iva";
    public static final String COL_TI_MOD_PAGAM = "ti_mod_pagam";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_ENTE_SIAM, new ColumnDescriptor(COL_ID_ENTE_SIAM, Types.DECIMAL, 22, true));
	map.put(COL_NM_ENTE_SIAM,
		new ColumnDescriptor(COL_NM_ENTE_SIAM, Types.VARCHAR, 100, false));
	map.put(COL_DT_INI_VAL, new ColumnDescriptor(COL_DT_INI_VAL, Types.TIMESTAMP, 7, false));
	map.put(COL_CD_FISC, new ColumnDescriptor(COL_CD_FISC, Types.VARCHAR, 11, false));
	map.put(COL_CD_ENTE_CONVENZ,
		new ColumnDescriptor(COL_CD_ENTE_CONVENZ, Types.VARCHAR, 100, false));
	map.put(COL_DS_VIA_SEDE_LEGALE,
		new ColumnDescriptor(COL_DS_VIA_SEDE_LEGALE, Types.VARCHAR, 254, false));
	map.put(COL_DS_NOTE, new ColumnDescriptor(COL_DS_NOTE, Types.VARCHAR, 254, false));
	map.put(COL_DS_CITTA_SEDE_LEGALE,
		new ColumnDescriptor(COL_DS_CITTA_SEDE_LEGALE, Types.VARCHAR, 254, false));
	map.put(COL_ID_AMBITO_TERRIT,
		new ColumnDescriptor(COL_ID_AMBITO_TERRIT, Types.DECIMAL, 22, false));
	map.put(COL_ID_CATEG_ENTE,
		new ColumnDescriptor(COL_ID_CATEG_ENTE, Types.DECIMAL, 22, false));
	map.put(COL_DT_CESSAZIONE,
		new ColumnDescriptor(COL_DT_CESSAZIONE, Types.TIMESTAMP, 7, false));
	map.put(COL_DT_INI_VAL_APPART_AMBIENTE,
		new ColumnDescriptor(COL_DT_INI_VAL_APPART_AMBIENTE, Types.TIMESTAMP, 7, false));
	map.put(COL_DT_FIN_VAL_APPART_AMBIENTE,
		new ColumnDescriptor(COL_DT_FIN_VAL_APPART_AMBIENTE, Types.TIMESTAMP, 7, false));
	map.put(COL_ID_ENTE_CONVENZ_NUOVO,
		new ColumnDescriptor(COL_ID_ENTE_CONVENZ_NUOVO, Types.DECIMAL, 22, false));
	map.put(COL_ID_ENTE_CONVENZ_CREAZIONE,
		new ColumnDescriptor(COL_ID_ENTE_CONVENZ_CREAZIONE, Types.DECIMAL, 22, false));
	map.put(COL_ID_ENTE_PRODUT_CORRISP,
		new ColumnDescriptor(COL_ID_ENTE_PRODUT_CORRISP, Types.DECIMAL, 22, false));
	map.put(COL_ID_PROV_SEDE_LEGALE,
		new ColumnDescriptor(COL_ID_PROV_SEDE_LEGALE, Types.DECIMAL, 22, false));
	map.put(COL_CD_NAZIONE_SEDE_LEGALE,
		new ColumnDescriptor(COL_CD_NAZIONE_SEDE_LEGALE, Types.VARCHAR, 254, false));
	map.put(COL_TI_CD_ENTE_CONVENZ,
		new ColumnDescriptor(COL_TI_CD_ENTE_CONVENZ, Types.VARCHAR, 20, false));
	map.put(COL_TI_ENTE, new ColumnDescriptor(COL_TI_ENTE, Types.VARCHAR, 18, false));
	map.put(COL_TI_ENTE_CONVENZ,
		new ColumnDescriptor(COL_TI_ENTE_CONVENZ, Types.VARCHAR, 20, false));
	map.put(COL_TI_ENTE_NON_CONVENZ,
		new ColumnDescriptor(COL_TI_ENTE_NON_CONVENZ, Types.VARCHAR, 20, false));
	map.put(COL_CD_CAP_SEDE_LEGALE,
		new ColumnDescriptor(COL_CD_CAP_SEDE_LEGALE, Types.VARCHAR, 5, false));
	map.put(COL_ID_AMBIENTE_ENTE_CONVENZ,
		new ColumnDescriptor(COL_ID_AMBIENTE_ENTE_CONVENZ, Types.DECIMAL, 22, false));
	map.put(COL_DT_RICH_MODULO_INFO,
		new ColumnDescriptor(COL_DT_RICH_MODULO_INFO, Types.TIMESTAMP, 7, false));
	map.put(COL_CD_UFE, new ColumnDescriptor(COL_CD_UFE, Types.VARCHAR, 100, false));
	map.put(COL_DS_UFE, new ColumnDescriptor(COL_DS_UFE, Types.VARCHAR, 254, false));
	map.put(COL_ID_CD_IVA, new ColumnDescriptor(COL_ID_CD_IVA, Types.DECIMAL, 22, false));
	map.put(COL_TI_MOD_PAGAM,
		new ColumnDescriptor(COL_TI_MOD_PAGAM, Types.VARCHAR, 100, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
