package it.eng.saceriam.slite.gen.tablebean;

import it.eng.saceriam.entity.OrgEnteSiam;
import it.eng.saceriam.entity.OrgEnteUserRif;
import it.eng.saceriam.entity.UsrUser;
import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import java.math.BigDecimal;

/**
 * RowBean per la tabella Org_Ente_User_Rif
 *
 */
public class OrgEnteUserRifRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 10 October 2018 12:18" )
     */

    public static OrgEnteUserRifTableDescriptor TABLE_DESCRIPTOR = new OrgEnteUserRifTableDescriptor();

    public OrgEnteUserRifRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdEnteUserRif() {
        return getBigDecimal("id_ente_user_rif");
    }

    public void setIdEnteUserRif(BigDecimal idEnteUserRif) {
        setObject("id_ente_user_rif", idEnteUserRif);
    }

    public BigDecimal getIdEnteConvenz() {
        return getBigDecimal("id_ente_convenz");
    }

    public void setIdEnteConvenz(BigDecimal idEnteConvenz) {
        setObject("id_ente_convenz", idEnteConvenz);
    }

    public BigDecimal getIdUserIam() {
        return getBigDecimal("id_user_iam");
    }

    public void setIdUserIam(BigDecimal idUserIam) {
        setObject("id_user_iam", idUserIam);
    }

    public String getDlNote() {
        return getString("dl_note");
    }

    public void setDlNote(String dlNote) {
        setObject("dl_note", dlNote);
    }

    public String getQualificaUser() {
        return getString("qualifica_user");
    }

    public void setQualificaUser(String qualificaUser) {
        setObject("qualifica_user", qualificaUser);
    }

    @Override
    public void entityToRowBean(Object obj) {
        OrgEnteUserRif entity = (OrgEnteUserRif) obj;
        this.setIdEnteUserRif(new BigDecimal(entity.getIdEnteUserRif()));
        if (entity.getOrgEnteSiam() != null) {
            this.setIdEnteConvenz(new BigDecimal(entity.getOrgEnteSiam().getIdEnteSiam()));

        }
        if (entity.getUsrUser() != null) {
            this.setIdUserIam(new BigDecimal(entity.getUsrUser().getIdUserIam()));

        }
        this.setQualificaUser(entity.getQualificaUser());
        this.setDlNote(entity.getDlNote());
    }

    @Override
    public OrgEnteUserRif rowBeanToEntity() {
        OrgEnteUserRif entity = new OrgEnteUserRif();
        if (this.getIdEnteUserRif() != null) {
            entity.setIdEnteUserRif(this.getIdEnteUserRif().longValue());
        }
        if (this.getIdEnteConvenz() != null) {
            if (entity.getOrgEnteSiam() == null) {
                entity.setOrgEnteSiam(new OrgEnteSiam());
            }
            entity.getOrgEnteSiam().setIdEnteSiam(this.getIdEnteConvenz().longValue());
        }
        if (this.getIdUserIam() != null) {
            if (entity.getUsrUser() == null) {
                entity.setUsrUser(new UsrUser());
            }
            entity.getUsrUser().setIdUserIam(this.getIdUserIam().longValue());
        }
        entity.setQualificaUser(this.getQualificaUser());
        entity.setDlNote(this.getDlNote());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
