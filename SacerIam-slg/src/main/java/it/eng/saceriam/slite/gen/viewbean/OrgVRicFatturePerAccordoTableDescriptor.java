/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella ORG_V_RIC_FATTURE_PER_ACCORDO
 *
 */
public class OrgVRicFatturePerAccordoTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 21 April 2021 14:25" )
     */

    public static final String SELECT = "Select * from ORG_V_RIC_FATTURE_PER_ACCORDO /**/";
    public static final String TABLE_NAME = "ORG_V_RIC_FATTURE";
    public static final String COL_ID_ENTE_CONVENZ = "id_ente_convenz";
    public static final String COL_NM_ENTE_CONVENZ = "nm_ente_convenz";
    public static final String COL_ID_ACCORDO_ENTE = "id_accordo_ente";
    public static final String COL_ID_TIPO_ACCORDO = "id_tipo_accordo";
    public static final String COL_CD_TIPO_ACCORDO = "cd_tipo_accordo";
    public static final String COL_ID_FATTURA_ENTE = "id_fattura_ente";
    public static final String COL_AA_FATTURA = "aa_fattura";
    public static final String COL_PG_FATTURA = "pg_fattura";
    public static final String COL_CD_FATTURA = "cd_fattura";
    public static final String COL_CD_REGISTRO_EMIS_FATTURA = "cd_registro_emis_fattura";
    public static final String COL_AA_EMISS_FATTURA = "aa_emiss_fattura";
    public static final String COL_CD_EMIS_FATTURA = "cd_emis_fattura";
    public static final String COL_DT_EMIS_FATTURA = "dt_emis_fattura";
    public static final String COL_IM_TOT_FATTURA = "im_tot_fattura";
    public static final String COL_IM_TOT_PAGATO = "im_tot_pagato";
    public static final String COL_ID_STATO_FATTURA_ENTE = "id_stato_fattura_ente";
    public static final String COL_TI_STATO_FATTURA_ENTE = "ti_stato_fattura_ente";
    public static final String COL_DT_REG_STATO_FATTURA_ENTE = "dt_reg_stato_fattura_ente";
    public static final String COL_ID_SERVIZIO_FATTURA = "id_servizio_fattura";
    public static final String COL_ID_SERVIZIO_EROGATO = "id_servizio_erogato";
    public static final String COL_ID_TIPO_SERVIZIO = "id_tipo_servizio";
    public static final String COL_CD_TIPO_SERVIZIO = "cd_tipo_servizio";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<>();

    static {
        map.put(COL_ID_ENTE_CONVENZ, new ColumnDescriptor(COL_ID_ENTE_CONVENZ, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE_CONVENZ, new ColumnDescriptor(COL_NM_ENTE_CONVENZ, Types.VARCHAR, 254, true));
        map.put(COL_ID_ACCORDO_ENTE, new ColumnDescriptor(COL_ID_ACCORDO_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_TIPO_ACCORDO, new ColumnDescriptor(COL_ID_TIPO_ACCORDO, Types.DECIMAL, 22, true));
        map.put(COL_CD_TIPO_ACCORDO, new ColumnDescriptor(COL_CD_TIPO_ACCORDO, Types.VARCHAR, 100, true));
        map.put(COL_ID_FATTURA_ENTE, new ColumnDescriptor(COL_ID_FATTURA_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_AA_FATTURA, new ColumnDescriptor(COL_AA_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_PG_FATTURA, new ColumnDescriptor(COL_PG_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_CD_FATTURA, new ColumnDescriptor(COL_CD_FATTURA, Types.VARCHAR, 100, true));
        map.put(COL_CD_REGISTRO_EMIS_FATTURA,
                new ColumnDescriptor(COL_CD_REGISTRO_EMIS_FATTURA, Types.VARCHAR, 100, true));
        map.put(COL_AA_EMISS_FATTURA, new ColumnDescriptor(COL_AA_EMISS_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_CD_EMIS_FATTURA, new ColumnDescriptor(COL_CD_EMIS_FATTURA, Types.VARCHAR, 100, true));
        map.put(COL_DT_EMIS_FATTURA, new ColumnDescriptor(COL_DT_EMIS_FATTURA, Types.TIMESTAMP, 7, true));
        map.put(COL_IM_TOT_FATTURA, new ColumnDescriptor(COL_IM_TOT_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_IM_TOT_PAGATO, new ColumnDescriptor(COL_IM_TOT_PAGATO, Types.DECIMAL, 22, true));
        map.put(COL_ID_STATO_FATTURA_ENTE, new ColumnDescriptor(COL_ID_STATO_FATTURA_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_TI_STATO_FATTURA_ENTE, new ColumnDescriptor(COL_TI_STATO_FATTURA_ENTE, Types.VARCHAR, 30, true));
        map.put(COL_DT_REG_STATO_FATTURA_ENTE,
                new ColumnDescriptor(COL_DT_REG_STATO_FATTURA_ENTE, Types.TIMESTAMP, 7, true));
        map.put(COL_ID_SERVIZIO_FATTURA, new ColumnDescriptor(COL_ID_SERVIZIO_FATTURA, Types.DECIMAL, 22, true));
        map.put(COL_ID_SERVIZIO_EROGATO, new ColumnDescriptor(COL_ID_SERVIZIO_EROGATO, Types.DECIMAL, 22, true));
        map.put(COL_ID_TIPO_SERVIZIO, new ColumnDescriptor(COL_ID_TIPO_SERVIZIO, Types.DECIMAL, 22, true));
        map.put(COL_CD_TIPO_SERVIZIO, new ColumnDescriptor(COL_CD_TIPO_SERVIZIO, Types.VARCHAR, 100, true));
    }

    @Override
    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
