/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.saceriam.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Usr_V_Ric_Richieste
 *
 */
public class UsrVRicRichiesteTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 5 September 2017 16:42" )
     */

    public static final String SELECT = "Select * from Usr_V_Ric_Richieste /**/";
    public static final String TABLE_NAME = "Usr_V_Ric_Richieste";
    public static final String COL_ID_USER_IAM_COR = "id_user_iam_cor";
    public static final String COL_NM_USERID_COR = "nm_userid_cor";
    public static final String COL_ID_ENTE_SIAM = "id_ente_siam";
    public static final String COL_NM_ENTE_SIAM = "nm_ente_siam";
    public static final String COL_ID_AMBIENTE_ENTE_CONVENZ = "id_ambiente_ente_convenz";
    public static final String COL_NM_AMBIENTE_ENTE_CONVENZ = "nm_ambiente_ente_convenz";
    public static final String COL_ID_RICH_GEST_USER = "id_rich_gest_user";
    public static final String COL_ID_ORGANIZ_IAM = "id_organiz_iam";
    public static final String COL_DL_COMPOSITO_ORGANIZ = "dl_composito_organiz";
    public static final String COL_CD_REGISTRO_RICH_GEST_USER = "cd_registro_rich_gest_user";
    public static final String COL_AA_RICH_GEST_USER = "aa_rich_gest_user";
    public static final String COL_CD_KEY_RICH_GEST_USER = "cd_key_rich_gest_user";
    public static final String COL_CD_RICH_GEST_USER = "cd_rich_gest_user";
    public static final String COL_TI_USER_RICH = "ti_user_rich";
    public static final String COL_NM_USER_RICH = "nm_user_rich";
    public static final String COL_NM_NOME_USER_RICH = "nm_nome_user_rich";
    public static final String COL_NM_COGNOME_USER_RICH = "nm_cognome_user_rich";
    public static final String COL_NM_USERID_RICH = "nm_userid_rich";
    public static final String COL_DT_RICH_GEST_USER = "dt_rich_gest_user";
    public static final String COL_TI_STATO_RICH_GEST_USER = "ti_stato_rich_gest_user";
    public static final String COL_ID_USER_IAM_APP_RICH = "id_user_iam_app_rich";
    public static final String COL_NM_NOME_USER_APP_RICH = "nm_nome_user_app_rich";
    public static final String COL_NM_COGNOME_USER_APP_RICH = "nm_cognome_user_app_rich";
    public static final String COL_NM_USERID_APP_RICH = "nm_userid_app_rich";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_USER_IAM_COR, new ColumnDescriptor(COL_ID_USER_IAM_COR, Types.DECIMAL, 22, true));
        map.put(COL_NM_USERID_COR, new ColumnDescriptor(COL_NM_USERID_COR, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE_SIAM, new ColumnDescriptor(COL_ID_ENTE_SIAM, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE_SIAM, new ColumnDescriptor(COL_NM_ENTE_SIAM, Types.VARCHAR, 254, true));
        map.put(COL_ID_AMBIENTE_ENTE_CONVENZ,
                new ColumnDescriptor(COL_ID_AMBIENTE_ENTE_CONVENZ, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE_ENTE_CONVENZ,
                new ColumnDescriptor(COL_NM_AMBIENTE_ENTE_CONVENZ, Types.VARCHAR, 100, true));
        map.put(COL_ID_RICH_GEST_USER, new ColumnDescriptor(COL_ID_RICH_GEST_USER, Types.DECIMAL, 22, true));
        map.put(COL_ID_ORGANIZ_IAM, new ColumnDescriptor(COL_ID_ORGANIZ_IAM, Types.DECIMAL, 22, true));
        map.put(COL_DL_COMPOSITO_ORGANIZ, new ColumnDescriptor(COL_DL_COMPOSITO_ORGANIZ, Types.VARCHAR, 4000, true));
        map.put(COL_CD_REGISTRO_RICH_GEST_USER,
                new ColumnDescriptor(COL_CD_REGISTRO_RICH_GEST_USER, Types.VARCHAR, 100, true));
        map.put(COL_AA_RICH_GEST_USER, new ColumnDescriptor(COL_AA_RICH_GEST_USER, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_RICH_GEST_USER, new ColumnDescriptor(COL_CD_KEY_RICH_GEST_USER, Types.VARCHAR, 100, true));
        map.put(COL_CD_RICH_GEST_USER, new ColumnDescriptor(COL_CD_RICH_GEST_USER, Types.VARCHAR, 100, true));
        map.put(COL_TI_USER_RICH, new ColumnDescriptor(COL_TI_USER_RICH, Types.VARCHAR, 20, true));
        map.put(COL_NM_USER_RICH, new ColumnDescriptor(COL_NM_USER_RICH, Types.VARCHAR, 100, true));
        map.put(COL_NM_NOME_USER_RICH, new ColumnDescriptor(COL_NM_NOME_USER_RICH, Types.VARCHAR, 100, true));
        map.put(COL_NM_COGNOME_USER_RICH, new ColumnDescriptor(COL_NM_COGNOME_USER_RICH, Types.VARCHAR, 100, true));
        map.put(COL_NM_USERID_RICH, new ColumnDescriptor(COL_NM_USERID_RICH, Types.VARCHAR, 100, true));
        map.put(COL_DT_RICH_GEST_USER, new ColumnDescriptor(COL_DT_RICH_GEST_USER, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_STATO_RICH_GEST_USER,
                new ColumnDescriptor(COL_TI_STATO_RICH_GEST_USER, Types.VARCHAR, 20, true));
        map.put(COL_ID_USER_IAM_APP_RICH, new ColumnDescriptor(COL_ID_USER_IAM_APP_RICH, Types.DECIMAL, 22, true));
        map.put(COL_NM_NOME_USER_APP_RICH, new ColumnDescriptor(COL_NM_NOME_USER_APP_RICH, Types.VARCHAR, 100, true));
        map.put(COL_NM_COGNOME_USER_APP_RICH,
                new ColumnDescriptor(COL_NM_COGNOME_USER_APP_RICH, Types.VARCHAR, 100, true));
        map.put(COL_NM_USERID_APP_RICH, new ColumnDescriptor(COL_NM_USERID_APP_RICH, Types.VARCHAR, 100, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
