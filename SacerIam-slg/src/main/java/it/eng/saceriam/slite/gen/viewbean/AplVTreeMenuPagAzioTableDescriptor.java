package it.eng.saceriam.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Apl_V_Tree_Menu_Pag_Azio
 *
 */
public class AplVTreeMenuPagAzioTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 23 February 2017 14:33" )
     */

    public static final String SELECT = "Select * from Apl_V_Tree_Menu_Pag_Azio /**/";
    public static final String TABLE_NAME = "Apl_V_Tree_Menu_Pag_Azio";
    public static final String COL_ID_APPLIC = "id_applic";
    public static final String COL_ID_NODO_PADRE = "id_nodo_padre";
    public static final String COL_ID_NODO = "id_nodo";
    public static final String COL_TIPO_NODO = "tipo_nodo";
    public static final String COL_DS_NODO = "ds_nodo";
    public static final String COL_NI_ORD_NODI = "ni_ord_nodi";
    public static final String COL_DS_ORD_NODI = "ds_ord_nodi";
    public static final String COL_NI_LIVELLO = "ni_livello";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_APPLIC, new ColumnDescriptor(COL_ID_APPLIC, Types.DECIMAL, 22, true));
        map.put(COL_ID_NODO_PADRE, new ColumnDescriptor(COL_ID_NODO_PADRE, Types.VARCHAR, 41, true));
        map.put(COL_ID_NODO, new ColumnDescriptor(COL_ID_NODO, Types.VARCHAR, 41, true));
        map.put(COL_TIPO_NODO, new ColumnDescriptor(COL_TIPO_NODO, Types.VARCHAR, 1, true));
        map.put(COL_DS_NODO, new ColumnDescriptor(COL_DS_NODO, Types.VARCHAR, 254, true));
        map.put(COL_NI_ORD_NODI, new ColumnDescriptor(COL_NI_ORD_NODI, Types.DECIMAL, 22, true));
        map.put(COL_DS_ORD_NODI, new ColumnDescriptor(COL_DS_ORD_NODI, Types.VARCHAR, 254, true));
        map.put(COL_NI_LIVELLO, new ColumnDescriptor(COL_NI_LIVELLO, Types.DECIMAL, 22, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
